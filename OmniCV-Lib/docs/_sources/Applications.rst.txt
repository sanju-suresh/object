.. include:: <isonum.txt>

**************************************************
Some application notes or use cases of the library
**************************************************

These application notes help the users to understand how easy it is to create some interesting applications using this library with just a few lines of code.

1. `GUI to control focus distortion and view orientation to generate different kinds of distortion effects and get images with different properties <FisheyeGUI.html>`_
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

This application is a small GUI that helps you to generate images with variable focal length and distortion coefficient from a given equirectangular image.
It can be used to create some interesting visual effects which are shown below in the gif.

.. figure:: eqrect2Fisheye2.*
   :align: center

2. `GUI to view an equirectangular image in 360 degree format with control trackbars for FOV and viewing angles <ViewerGUI.html>`_
------------------------------------------------------------------------------------------

This application is a small GUI that can be used to change the FOV and viewing angles to view any 360 |deg| video. NOTE: This is just a toy example and not full-fledged software. It does not process any audio. The main objective of creating this GUI was to show different outputs one can generate from an equirectangular image based on various parameters.


.. figure:: 360Viewer.*
   :align: center

3. `GUI to determine fisheye camera parameters like aperture and fisheye radius for further conversions <ParamsGUI.html>`_
------------------------------------------------------------------------------------------

This is an important use case that any user needs to use once to get the parameters of the fisheye camera like aperture and an apparent radius in the image. These parameters are used in the conversion of the fisheye image to any other type of image. The GUI makes it easy for users to determine these parameters for fisheye image/video from an unknown camera.  

.. |Mode1| image:: getRadius.*

.. |Mode2| image:: FisheyeParams.*

+----------+----------+
| Step 1   | Step 2   |
+==========+==========+
| |Mode1|  | |Mode2|  |
+----------+----------+


`Back to home page <index.html>`_
---------------------------------

